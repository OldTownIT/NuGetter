<Activity mc:Ignorable="sads sap" x:Class="TfsBuild.Process" this:Process.BuildSettings="[New Microsoft.TeamFoundation.Build.Workflow.Activities.BuildSettings()]" this:Process.TestSpecs="[New Microsoft.TeamFoundation.Build.Workflow.Activities.TestSpecList(New Microsoft.TeamFoundation.Build.Workflow.Activities.TestAssemblySpec(&quot;**\*test*.dll&quot;))]" this:Process.BuildNumberFormat="[&quot;$(BuildDefinitionName)_$(Date:yyyyMMdd)$(Rev:.r)&quot;]" this:Process.CleanWorkspace="[Microsoft.TeamFoundation.Build.Workflow.Activities.CleanWorkspaceOption.All]" this:Process.RunCodeAnalysis="[Microsoft.TeamFoundation.Build.Workflow.Activities.CodeAnalysisOption.AsConfigured]" this:Process.SourceAndSymbolServerSettings="[New Microsoft.TeamFoundation.Build.Workflow.Activities.SourceAndSymbolServerSettings(True, Nothing)]" this:Process.AgentSettings="[New Microsoft.TeamFoundation.Build.Workflow.Activities.AgentSettings() With {.MaxWaitTime = New System.TimeSpan(4, 0, 0), .MaxExecutionTime = New System.TimeSpan(0, 0, 0), .TagComparison = Microsoft.TeamFoundation.Build.Workflow.Activities.TagComparison.MatchExactly }]" this:Process.AssociateChangesetsAndWorkItems="[True]" this:Process.CreateWorkItem="[True]" this:Process.DropBuild="[True]" this:Process.MSBuildPlatform="[Microsoft.TeamFoundation.Build.Workflow.Activities.ToolPlatform.Auto]" this:Process.PerformTestImpactAnalysis="[True]" this:Process.CreateLabel="[True]" this:Process.DisableTests="[False]" this:Process.Verbosity="[Microsoft.TeamFoundation.Build.Workflow.BuildVerbosity.Normal]" this:Process.SupportedReasons="All" this:Process.NuGetterBasePath="NuGetPrePackage" this:Process.NuGetterNuGetExeFilePath="[String.Empty]" this:Process.NuGetterOutputDirectory="NuGetPackage" this:Process.NuGetterSwitchCreateOnly="True" this:Process.NuGetterSwitchInvokePowerShell="False" this:Process.NuGetterSwitchInvokePush="False" this:Process.NuGetterAdditionalOptions="[String.Empty]"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:local="clr-namespace:TfsBuild.NuGetter.Activities;assembly=TfsBuild.NuGetter.Activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mt="clr-namespace:Microsoft.TeamFoundation;assembly=Microsoft.TeamFoundation.Common"
 xmlns:mtbc="clr-namespace:Microsoft.TeamFoundation.Build.Client;assembly=Microsoft.TeamFoundation.Build.Client"
 xmlns:mtbc1="clr-namespace:Microsoft.TeamFoundation.Build.Client;assembly=Microsoft.TeamFoundation.Build.Client, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
 xmlns:mtbw="clr-namespace:Microsoft.TeamFoundation.Build.Workflow;assembly=Microsoft.TeamFoundation.Build.Workflow"
 xmlns:mtbw1="clr-namespace:Microsoft.TeamFoundation.Build.Workflow;assembly=Microsoft.TeamFoundation.Build.Workflow, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
 xmlns:mtbwa="clr-namespace:Microsoft.TeamFoundation.Build.Workflow.Activities;assembly=Microsoft.TeamFoundation.Build.Workflow"
 xmlns:mtbwa1="clr-namespace:Microsoft.TeamFoundation.Build.Workflow.Activities;assembly=Microsoft.TeamFoundation.Build.Workflow, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
 xmlns:mtbwt="clr-namespace:Microsoft.TeamFoundation.Build.Workflow.Tracking;assembly=Microsoft.TeamFoundation.Build.Workflow"
 xmlns:mttbb="clr-namespace:Microsoft.TeamFoundation.TestImpact.BuildIntegration.BuildActivities;assembly=Microsoft.TeamFoundation.TestImpact.BuildIntegration"
 xmlns:mtvc="clr-namespace:Microsoft.TeamFoundation.VersionControl.Client;assembly=Microsoft.TeamFoundation.VersionControl.Client, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
 xmlns:mtvc1="clr-namespace:Microsoft.TeamFoundation.VersionControl.Client;assembly=Microsoft.TeamFoundation.VersionControl.Client"
 xmlns:mtvc2="clr-namespace:Microsoft.TeamFoundation.VersionControl.Common;assembly=Microsoft.TeamFoundation.VersionControl.Common"
 xmlns:mtwc="clr-namespace:Microsoft.TeamFoundation.WorkItemTracking.Client;assembly=Microsoft.TeamFoundation.WorkItemTracking.Client"
 xmlns:mv="clr-namespace:Microsoft.VisualBasic;assembly=System"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:s1="clr-namespace:System;assembly=System"
 xmlns:s2="clr-namespace:System;assembly=System.Core"
 xmlns:s3="clr-namespace:System;assembly=System.ServiceModel"
 xmlns:s4="clr-namespace:System;assembly=System.ComponentModel.Composition"
 xmlns:s5="clr-namespace:System;assembly=Microsoft.VisualStudio.Platform.VSEditor"
 xmlns:s6="clr-namespace:System;assembly=mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:s7="clr-namespace:System;assembly=System.Xml"
 xmlns:sa="clr-namespace:System.Activities;assembly=System.Activities"
 xmlns:sad="clr-namespace:System.Activities.Debugger;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sc="clr-namespace:System.ComponentModel;assembly=System"
 xmlns:sc1="clr-namespace:System.ComponentModel;assembly=WindowsBase"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:scg1="clr-namespace:System.Collections.Generic;assembly=System"
 xmlns:scg2="clr-namespace:System.Collections.Generic;assembly=System.ServiceModel"
 xmlns:scg3="clr-namespace:System.Collections.Generic;assembly=System.Core"
 xmlns:scg4="clr-namespace:System.Collections.Generic;assembly=mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing"
 xmlns:si="clr-namespace:System.IO;assembly=System"
 xmlns:si1="clr-namespace:System.IO;assembly=mscorlib"
 xmlns:si2="clr-namespace:System.IO;assembly=System.Core"
 xmlns:si3="clr-namespace:System.IO;assembly=WindowsBase"
 xmlns:si4="clr-namespace:System.IO;assembly=System.ServiceModel"
 xmlns:si5="clr-namespace:System.IO;assembly=mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:sl="clr-namespace:System.Linq;assembly=System.Core"
 xmlns:sl1="clr-namespace:System.Linq;assembly=System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:sr="clr-namespace:System.Reflection;assembly=mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:st="clr-namespace:System.Text;assembly=mscorlib"
 xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System"
 xmlns:str1="clr-namespace:System.Text.RegularExpressions;assembly=System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:sx="clr-namespace:System.Xml;assembly=System.Data"
 xmlns:sx1="clr-namespace:System.Xml;assembly=System.Xml"
 xmlns:this="clr-namespace:TfsBuild"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="BuildSettings" Type="InArgument(mtbwa:BuildSettings)" />
    <x:Property Name="TestSpecs" Type="InArgument(mtbwa:TestSpecList)" />
    <x:Property Name="BuildNumberFormat" Type="InArgument(x:String)" />
    <x:Property Name="CleanWorkspace" Type="InArgument(mtbwa:CleanWorkspaceOption)" />
    <x:Property Name="RunCodeAnalysis" Type="InArgument(mtbwa:CodeAnalysisOption)" />
    <x:Property Name="SourceAndSymbolServerSettings" Type="InArgument(mtbwa:SourceAndSymbolServerSettings)" />
    <x:Property Name="AgentSettings" Type="InArgument(mtbwa:AgentSettings)" />
    <x:Property Name="AssociateChangesetsAndWorkItems" Type="InArgument(x:Boolean)" />
    <x:Property Name="CreateWorkItem" Type="InArgument(x:Boolean)" />
    <x:Property Name="DropBuild" Type="InArgument(x:Boolean)" />
    <x:Property Name="MSBuildArguments" Type="InArgument(x:String)" />
    <x:Property Name="MSBuildPlatform" Type="InArgument(mtbwa:ToolPlatform)" />
    <x:Property Name="PerformTestImpactAnalysis" Type="InArgument(x:Boolean)" />
    <x:Property Name="CreateLabel" Type="InArgument(x:Boolean)" />
    <x:Property Name="DisableTests" Type="InArgument(x:Boolean)" />
    <x:Property Name="GetVersion" Type="InArgument(x:String)" />
    <x:Property Name="PrivateDropLocation" Type="InArgument(x:String)" />
    <x:Property Name="Verbosity" Type="InArgument(mtbw:BuildVerbosity)" />
    <x:Property Name="Metadata" Type="mtbw:ProcessParameterMetadataCollection" />
    <x:Property Name="SupportedReasons" Type="mtbc:BuildReason" />
    <x:Property Name="NuGetterApiKey" Type="InArgument(x:String)" />
    <x:Property Name="NuGetterBasePath" Type="InArgument(x:String)" />
    <x:Property Name="NuGetterNuGetExeFilePath" Type="InArgument(x:String)" />
    <x:Property Name="NuGetterOutputDirectory" Type="InArgument(x:String)" />
    <x:Property Name="NuGetterPushDestination" Type="InArgument(x:String)" />
    <x:Property Name="NuGetterSwitchCreateOnly" Type="InArgument(x:Boolean)" />
    <x:Property Name="NuGetterSwitchInvokePowerShell" Type="InArgument(x:Boolean)" />
    <x:Property Name="NuGetterSwitchInvokePush" Type="InArgument(x:Boolean)" />
    <x:Property Name="NuGetterVersion" Type="InArgument(x:String)" />
    <x:Property Name="NuGetterAdditionalOptions" Type="InArgument(x:String)" />
    <x:Property Name="NuGetterPackageListFilePath" Type="InArgument(x:String)" />
    <x:Property Name="NuGetterNuSpecFilePath" Type="InArgument(x:String)" />
    <x:Property Name="NuGetterPowerShellScriptPath" Type="InArgument(x:String)" />
  </x:Members>
  <this:Process.MSBuildArguments>
    <InArgument x:TypeArguments="x:String" />
  </this:Process.MSBuildArguments>
  <this:Process.GetVersion>
    <InArgument x:TypeArguments="x:String" />
  </this:Process.GetVersion>
  <this:Process.Metadata>
    <mtbw:ProcessParameterMetadataCollection>
      <mtbw:ProcessParameterMetadata Category="NuGetter (A) - PrePackaging" Description="A value of True in this parameter indicates that there is a PowerShell Script ('*.ps1') to execute before the packaging step.  If True, there must be a path to the script entered in PowerShell Script Path." DisplayName="Invoke PowerShell Script" ParameterName="NuGetterSwitchInvokePowerShell" />
      <mtbw:ProcessParameterMetadata Category="NuGetter (A) - PrePackaging" Description="Enter a relative or full source control path to a PowerShell script if you want it to be executed before the packaging step." DisplayName="PowerShell Script File Path" ParameterName="NuGetterPowerShellScriptPath" />
      <mtbw:ProcessParameterMetadata Category="NuGetter (B) - Package" Description="A relative or full source control path here indicates where to find the NuGet.exe application. Leave this parameter blank if NuGet.exe is installed in the 'Path' of the build machine." DisplayName="NuGet.Exe File Path" ParameterName="NuGetterNuGetExeFilePath" />
      <mtbw:ProcessParameterMetadata Category="NuGetter (B) - Package" Description="This is the 'OutputDirectory' parameter for the NuGet command line.  Enter a folder name where NuGet should save the new package file.  This should just be a relative path originating in the 'Drop Folder'." DisplayName="Output Directory" ParameterName="NuGetterOutputDirectory" />
      <mtbw:ProcessParameterMetadata Category="NuGetter (B) - Package" Description="This is the 'BasePath' parameter for the NuGet command line.  Enter a folder name where NuGet should find the file(s) to package.  This should just be a relative path originating in the 'Drop Folder'.  If you used a PowerShell prepackage script, this is where the script should have placed the files." DisplayName="Base Path" ParameterName="NuGetterBasePath" />
      <mtbw:ProcessParameterMetadata Category="NuGetter (B) - Package" Description="Enter a relative or full source control path to the NuSpec file to be used in the packaging process.  If you use a relative path, it should originate from the 'Sources' folder on the build machine." DisplayName="NuSpec File Path" ParameterName="NuGetterNuSpecFilePath" />
      <mtbw:ProcessParameterMetadata Category="NuGetter (B) - Package" Description="Enter a version here if you would like to override the version value in the NuSpec file. Use a numeric, 'Major.Minor.Build.Revision' format." DisplayName="Version or Version Seed File Path" ParameterName="NuGetterVersion" />
      <mtbw:ProcessParameterMetadata Category="NuGetter (C) - Push and Publish" Description="Enter a NuGet API key directly, or a relative or full source control path to a file that contains the API key.  An entry here is only required if pushing to a NuGet Gallery that requires a key." DisplayName="Api Key or File Path" ParameterName="NuGetterApiKey" />
      <mtbw:ProcessParameterMetadata Category="NuGetter (C) - Push and Publish" Description="A value of True in this parameter indicates that the process should attempt to push the NuGet package to a gallery (internal or external) as long as the package process succeeded." DisplayName="Invoke Push Switch" ParameterName="NuGetterSwitchInvokePush" />
      <mtbw:ProcessParameterMetadata Category="NuGetter (C) - Push and Publish" Description="A value of True in this parameter indicates that the push process should NOT attempt to publish (make public) the package after it has been pushed to the NuGet Gallery.  This is only applicable if the gallery has the publishing feature." DisplayName="Create Only - Do Not Publish" ParameterName="NuGetterSwitchCreateOnly" />
      <mtbw:ProcessParameterMetadata Category="NuGetter (C) - Push and Publish" Description="This is the 'Source' parameter for the NuGet command line.  It indicates where the package should be pushed.  Unlike the NuGet parameter, you can enter an absolute drive path or UNC path value or an http site here." DisplayName="Source (Push Destination)" ParameterName="NuGetterPushDestination" />
      <mtbw:ProcessParameterMetadata Category="NuGetter (B) - Package" Description="Enter any additional options for the NuGet command line here.  They will be appended, as is, to the command line sent to the NuGet application." DisplayName="Additional NuGet Command Line Options" ParameterName="NuGetterAdditionalOptions" />
      <mtbw:ProcessParameterMetadata Category="NuGetter (A) - PrePackaging" DisplayName="Multi-Package List File Path" ParameterName="NuGetterPackageListFilePath" />
    </mtbw:ProcessParameterMetadataCollection>
  </this:Process.Metadata>
  <sap:VirtualizedContainerService.HintSize>1117,3345</sap:VirtualizedContainerService.HintSize>
  <mva:VisualBasic.Settings>Assembly references and imported namespaces serialized as XML namespaces</mva:VisualBasic.Settings>
  <Sequence sad:XamlDebuggerXmlReader.FileName="D:\_TfsProjects\BuildActivities\NuGetter\Dev\V1.3.0.0\Source\TfsBuild.NuGetter.Activities\BuildProcessTemplates\NuGetterMultiPkgBuildTemplate.xaml" sap:VirtualizedContainerService.HintSize="1077,3305" mtbwt:BuildTrackingParticipant.Importance="None" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces">
    <Sequence.Variables>
      <Variable x:TypeArguments="mtbc:IBuildDetail" Name="BuildDetail" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <mtbwa:GetBuildDetail DisplayName="Get the Build" sap:VirtualizedContainerService.HintSize="1055,22" mtbwt:BuildTrackingParticipant.Importance="Low" Result="[BuildDetail]" />
    <Sequence DisplayName="Update Drop Location" sap:VirtualizedContainerService.HintSize="1055,51" mtbwt:BuildTrackingParticipant.Importance="Low">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <mtbwa:InvokeForReason DisplayName="Update Build Number for Triggered Builds" sap:VirtualizedContainerService.HintSize="611,146" Reason="Triggered">
        <mtbwa:UpdateBuildNumber BuildNumberFormat="[BuildNumberFormat]" DisplayName="Update Build Number" sap:VirtualizedContainerService.HintSize="200,22" />
      </mtbwa:InvokeForReason>
      <If Condition="[DropBuild AndAlso (BuildDetail.Reason And Microsoft.TeamFoundation.Build.Client.BuildReason.Triggered) = BuildDetail.Reason]" DisplayName="If DropBuild And Build Reason is Triggered" sap:VirtualizedContainerService.HintSize="611,560" mtbwt:BuildTrackingParticipant.Importance="Low">
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="486,454" mtbwt:BuildTrackingParticipant.Importance="None">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[String.IsNullOrEmpty(BuildDetail.DropLocationRoot)]" DisplayName="If DropLocationRoot is empty" sap:VirtualizedContainerService.HintSize="464,206" mtbwt:BuildTrackingParticipant.Importance="Low">
              <If.Then>
                <Throw DisplayName="Throw EmptyDropLocationRootException" Exception="[New Microsoft.TeamFoundation.Build.Workflow.Activities.EmptyDropLocationRootException(BuildDetail.BuildDefinition.Name)]" sap:VirtualizedContainerService.HintSize="269,100" mtbwt:BuildTrackingParticipant.Importance="Low" />
              </If.Then>
            </If>
            <mtbwa:SetBuildProperties DisplayName="Set Drop Location" DropLocation="[BuildDetail.DropLocationRoot + &quot;\&quot; + BuildDetail.BuildDefinition.Name + &quot;\&quot; + BuildDetail.BuildNumber]" sap:VirtualizedContainerService.HintSize="464,22" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="DropLocation" />
            <mtbwa:CreateDirectory Directory="[BuildDetail.DropLocation]" DisplayName="Create the Drop Location" sap:VirtualizedContainerService.HintSize="464,22" mtbwt:BuildTrackingParticipant.Importance="Normal" />
          </Sequence>
        </If.Then>
      </If>
      <If Condition="[DropBuild AndAlso BuildDetail.Reason = Microsoft.TeamFoundation.Build.Client.BuildReason.ValidateShelveset]" DisplayName="If DropBuild And Build Reason is ValidateShelveset" sap:VirtualizedContainerService.HintSize="611,312" mtbwt:BuildTrackingParticipant.Importance="Low">
        <If.Then>
          <If Condition="[Not String.IsNullOrEmpty(PrivateDropLocation)]" sap:VirtualizedContainerService.HintSize="464,206" mtbwt:BuildTrackingParticipant.Importance="None">
            <If.Then>
              <Sequence mtbwt:BuildTrackingParticipant.Importance="None">
                <mtbwa:SetBuildProperties DisplayName="Set Drop Location for Private Build" DropLocation="[PrivateDropLocation + &quot;\&quot; + BuildDetail.BuildDefinition.Name + &quot;\&quot; + BuildDetail.BuildNumber]" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="DropLocation" />
                <mtbwa:CreateDirectory Directory="[BuildDetail.DropLocation]" DisplayName="Create the Drop Location" mtbwt:BuildTrackingParticipant.Importance="Normal" />
              </Sequence>
            </If.Then>
            <If.Else>
              <mtbwa:WriteBuildWarning Message="The build outputs for this private build will not be copied to the drop location because the PrivateDropLocation is not set." />
            </If.Else>
          </If>
        </If.Then>
      </If>
    </Sequence>
    <mtbwa:AgentScope DisplayName="Run On Agent" sap:VirtualizedContainerService.HintSize="1055,2842" MaxExecutionTime="[AgentSettings.MaxExecutionTime]" MaxWaitTime="[AgentSettings.MaxWaitTime]" ReservationSpec="[AgentSettings.GetAgentReservationSpec()]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces">
      <mtbwa:AgentScope.Variables>
        <Variable x:TypeArguments="mtbc:IBuildAgent" Name="BuildAgent" />
        <Variable x:TypeArguments="mtvc1:Workspace" Name="Workspace" />
        <Variable x:TypeArguments="x:String" Name="BuildDirectory" />
        <Variable x:TypeArguments="x:String" Default="[BuildDetail.BuildNumber]" Name="LabelName" />
        <Variable x:TypeArguments="x:String" Name="WorkspaceName" />
        <Variable x:TypeArguments="x:String" Name="SourcesDirectory" />
        <Variable x:TypeArguments="x:String" Name="BinariesDirectory" />
        <Variable x:TypeArguments="x:String" Name="TestResultsDirectory" />
        <Variable x:TypeArguments="x:Int32" Name="NuGetterVPackagesCount" />
        <Variable x:TypeArguments="x:String" Name="NuGetterVPackageListFilePath" />
      </mtbwa:AgentScope.Variables>
      <Sequence DisplayName="Initialize Variables" sap:VirtualizedContainerService.HintSize="1033,51" mtbwt:BuildTrackingParticipant.Importance="Low">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <mtbwa:GetBuildAgent DisplayName="Get the Agent" sap:VirtualizedContainerService.HintSize="464,22" mtbwt:BuildTrackingParticipant.Importance="Low" Result="[BuildAgent]" />
        <mtbwa:GetBuildDirectory DisplayName="Get the Build Directory" sap:VirtualizedContainerService.HintSize="464,22" mtbwt:BuildTrackingParticipant.Importance="Low" Result="[BuildDirectory]" />
        <Assign x:TypeArguments="x:String" DisplayName="Initialize Workspace Name" sap:VirtualizedContainerService.HintSize="464,22" mtbwt:BuildTrackingParticipant.Importance="Low" To="[WorkspaceName]" Value="[String.Format(&quot;{0}_{1}_{2}&quot;, BuildDetail.BuildDefinition.Id, Microsoft.TeamFoundation.LinkingUtilities.DecodeUri(BuildAgent.Uri.AbsoluteUri).ToolSpecificId, BuildAgent.ServiceHost.Name)]" />
        <Assign x:TypeArguments="x:String" DisplayName="Initialize Sources Directory" sap:VirtualizedContainerService.HintSize="464,22" mtbwt:BuildTrackingParticipant.Importance="Low" To="[SourcesDirectory]" Value="[String.Format(&quot;{0}\Sources&quot;, BuildDirectory)]" />
        <Assign x:TypeArguments="x:String" DisplayName="Initialize Binaries Directory" sap:VirtualizedContainerService.HintSize="464,22" mtbwt:BuildTrackingParticipant.Importance="Low" To="[BinariesDirectory]" Value="[String.Format(&quot;{0}\Binaries&quot;, BuildDirectory)]" />
        <Assign x:TypeArguments="x:String" DisplayName="Initialize TestResults Directory" sap:VirtualizedContainerService.HintSize="464,22" mtbwt:BuildTrackingParticipant.Importance="Low" To="[TestResultsDirectory]" Value="[String.Format(&quot;{0}\TestResults&quot;, BuildDirectory)]" />
        <If Condition="[Not BuildSettings.HasPlatformConfigurations]" DisplayName="If Not BuildSettings.HasPlatformConfigurations" sap:VirtualizedContainerService.HintSize="464,206" mtbwt:BuildTrackingParticipant.Importance="Low">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <AddToCollection x:TypeArguments="mtbwa:PlatformConfiguration" Collection="[BuildSettings.PlatformConfigurations]" DisplayName="Use Default Platform Configuration" sap:VirtualizedContainerService.HintSize="269,100" mtbwt:BuildTrackingParticipant.Importance="Low" Item="[Microsoft.TeamFoundation.Build.Workflow.Activities.PlatformConfiguration.Default]" />
          </If.Then>
        </If>
        <If Condition="[WorkspaceName.Length &gt; Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.MaxWorkspaceNameSize]" DisplayName="If WorkspaceName &gt; MaxSize" sap:VirtualizedContainerService.HintSize="464,314" mtbwt:BuildTrackingParticipant.Importance="Low">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="281,208" mtbwt:BuildTrackingParticipant.Importance="None">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <mtbwa:WriteBuildWarning sap:VirtualizedContainerService.HintSize="200,22" Message="[String.Format(&quot;The workspace name '{0}' exceeds the maximum allowed limit of '{1}' characters. Truncating it to match the maximum limit.&quot;, WorkspaceName, Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.MaxWorkspaceNameSize)]" />
              <Assign x:TypeArguments="x:String" DisplayName="Truncate WorkspaceName to MaxSize" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" To="[WorkspaceName]" Value="[WorkspaceName.Substring(0, Microsoft.TeamFoundation.VersionControl.Common.RepositoryConstants.MaxWorkspaceNameSize).TrimEnd()]" />
            </Sequence>
          </If.Then>
        </If>
      </Sequence>
      <Sequence DisplayName="Initialize Workspace" sap:VirtualizedContainerService.HintSize="1033,543" mtbwt:BuildTrackingParticipant.Importance="Low">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <mtbwa:DeleteDirectory Directory="[TestResultsDirectory]" DisplayName="Delete Test Results Directory" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Normal" Recursive="[True]" />
        <If Condition="[Not CleanWorkspace = Microsoft.TeamFoundation.Build.Workflow.Activities.CleanWorkspaceOption.None]" DisplayName="If Not CleanWorkspace = CleanWorkspaceOption.None" sap:VirtualizedContainerService.HintSize="200,51" mtbwt:BuildTrackingParticipant.Importance="Low">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <mtbwa:DeleteDirectory Directory="[BinariesDirectory]" DisplayName="Delete Binaries Directory" sap:VirtualizedContainerService.HintSize="269,100" mtbwt:BuildTrackingParticipant.Importance="Normal" />
          </If.Then>
        </If>
        <If Condition="[CleanWorkspace = Microsoft.TeamFoundation.Build.Workflow.Activities.CleanWorkspaceOption.All]" DisplayName="If CleanWorkspace = CleanWorkspaceOption.All" sap:VirtualizedContainerService.HintSize="200,51" mtbwt:BuildTrackingParticipant.Importance="Low">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence DisplayName="Delete Workspace and Sources Directory" sap:VirtualizedContainerService.HintSize="281,208" mtbwt:BuildTrackingParticipant.Importance="Low">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <mtbwa:DeleteWorkspace DeleteLocalItems="[True]" DisplayName="Delete Workspace" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Normal" Name="[WorkspaceName]" />
              <mtbwa:DeleteDirectory Directory="[SourcesDirectory]" DisplayName="Delete Sources Directory" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Normal" />
            </Sequence>
          </If.Then>
        </If>
        <mtbwa:CreateWorkspace BuildDirectory="[BuildDirectory]" Comment="[&quot;Workspace Created by Team Build&quot;]" DisplayName="Create Workspace" sap:VirtualizedContainerService.HintSize="200,22" Name="[WorkspaceName]" Result="[Workspace]" SourcesDirectory="[SourcesDirectory]" />
        <If Condition="[CleanWorkspace = Microsoft.TeamFoundation.Build.Workflow.Activities.CleanWorkspaceOption.Outputs]" DisplayName="If CleanWorkspace = CleanWorkspaceOption.Outputs" sap:VirtualizedContainerService.HintSize="200,51" mtbwt:BuildTrackingParticipant.Importance="Low">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <ForEach x:TypeArguments="mtbwa:PlatformConfiguration" DisplayName="For Each Configuration in BuildSettings.PlatformConfigurations" sap:VirtualizedContainerService.HintSize="693,834" mtbwt:BuildTrackingParticipant.Importance="Low" Values="[BuildSettings.PlatformConfigurations]">
              <ActivityAction x:TypeArguments="mtbwa:PlatformConfiguration">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="mtbwa:PlatformConfiguration" Name="platformConfiguration" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Clean Configuration" sap:VirtualizedContainerService.HintSize="663,728">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[BuildSettings.HasProjectsToBuild]" DisplayName="If BuildSettings.HasProjectsToBuild" sap:VirtualizedContainerService.HintSize="641,604" mtbwt:BuildTrackingParticipant.Importance="Low">
                    <If.Then>
                      <ForEach x:TypeArguments="x:String" DisplayName="For Each Project in BuildSettings.ProjectsToBuild" sap:VirtualizedContainerService.HintSize="516,498" mtbwt:BuildTrackingParticipant.Importance="Low" Values="[BuildSettings.ProjectsToBuild]">
                        <ActivityAction x:TypeArguments="x:String">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:String" Name="serverBuildProjectItem" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Clean Project" sap:VirtualizedContainerService.HintSize="486,392" mtbwt:BuildTrackingParticipant.Importance="Normal">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="localBuildProjectItem" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <mtbwa:ConvertWorkspaceItem DisplayName="Convert Server Paths to Local Paths" sap:VirtualizedContainerService.HintSize="464,22" mtbwt:BuildTrackingParticipant.Importance="Low" Input="[serverBuildProjectItem]" Result="[localBuildProjectItem]" Workspace="[Workspace]" />
                            <If Condition="[System.IO.File.Exists(localBuildProjectItem)]" DisplayName="If File.Exists(Project)" sap:VirtualizedContainerService.HintSize="464,206" mtbwt:BuildTrackingParticipant.Importance="Low">
                              <If.Then>
                                <mtbwa:MSBuild CommandLineArguments="[String.Format(&quot;/p:SkipInvalidConfigurations=true {0}&quot;, MSBuildArguments)]" Configuration="[platformConfiguration.Configuration]" DisplayName="Run MSBuild for Project" GenerateVSPropsFile="[True]" sap:VirtualizedContainerService.HintSize="269,100" OutDir="[BinariesDirectory]" Platform="[platformConfiguration.Platform]" Project="[localBuildProjectItem]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" Targets="[New String() { &quot;Clean&quot; }]" TargetsNotLogged="[New String() {&quot;GetNativeManifest&quot;, &quot;GetCopyToOutputDirectoryItems&quot;, &quot;GetTargetPath&quot;}]" ToolPlatform="[MSBuildPlatform]" Verbosity="[Verbosity]" />
                              </If.Then>
                            </If>
                          </Sequence>
                        </ActivityAction>
                      </ForEach>
                    </If.Then>
                  </If>
                </Sequence>
              </ActivityAction>
            </ForEach>
          </If.Then>
        </If>
        <mtbwa:SyncWorkspace DisplayName="Get Workspace" sap:VirtualizedContainerService.HintSize="200,22" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" VersionOverride="[GetVersion]" Workspace="[Workspace]" />
      </Sequence>
      <If Condition="[CreateLabel]" DisplayName="If CreateLabel" sap:VirtualizedContainerService.HintSize="1033,51" mtbwt:BuildTrackingParticipant.Importance="Low">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <mtbwa:InvokeForReason DisplayName="Create and Set Label for non-Shelveset Builds" sap:VirtualizedContainerService.HintSize="281,208" Reason="Manual, IndividualCI, BatchedCI, Schedule, ScheduleForced, UserCreated">
            <mtbwa:LabelWorkspace Comment="[&quot;Label Created by Team Build&quot;]" DisplayName="Create Label" sap:VirtualizedContainerService.HintSize="200,22" Name="[LabelName]" Scope="[String.Format(&quot;$/{0}&quot;, BuildDetail.BuildDefinition.TeamProject)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" Workspace="[Workspace]" />
            <mtbwa:SetBuildProperties DisplayName="Set Label on BuildDetail" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" LabelName="[String.Format(&quot;{0}@$/{1}&quot;, LabelName, BuildDetail.BuildDefinition.TeamProject)]" PropertiesToSet="LabelName" />
          </mtbwa:InvokeForReason>
        </If.Then>
      </If>
      <TryCatch DisplayName="Try Compile, Test, and Associate Changesets and Work Items" sap:VirtualizedContainerService.HintSize="1033,51" mtbwt:BuildTrackingParticipant.Importance="Low">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <TryCatch.Finally>
          <Sequence DisplayName="Revert Workspace and Copy Files to Drop Location" mtbwt:BuildTrackingParticipant.Importance="Low">
            <mtbwa:InvokeForReason DisplayName="Revert Workspace for Shelveset Builds" Reason="ValidateShelveset, CheckInShelveset">
              <mtbwa:RevertWorkspace DisplayName="Revert Workspace" Workspace="[Workspace]" />
            </mtbwa:InvokeForReason>
            <If Condition="[DropBuild AndAlso Not String.IsNullOrEmpty(BuildDetail.DropLocation)]" DisplayName="If DropBuild And DropLocation is Set" mtbwt:BuildTrackingParticipant.Importance="Low">
              <If.Then>
                <mtbwa:CopyDirectory Destination="[BuildDetail.DropLocation]" DisplayName="Copy Files to Drop Location" Source="[BinariesDirectory]" />
              </If.Then>
            </If>
          </Sequence>
        </TryCatch.Finally>
        <TryCatch.Try>
          <Sequence sap:VirtualizedContainerService.HintSize="1910,4201" mtbwt:BuildTrackingParticipant.Importance="None">
            <Sequence.Variables>
              <Variable x:TypeArguments="s:Exception" Name="compilationException" />
              <Variable x:TypeArguments="scg:IList(mtvc1:Changeset)" Name="associatedChangesets" />
              <Variable x:TypeArguments="x:Boolean" Name="treatTestFailureAsBuildFailure" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Parallel DisplayName="Compile, Test, and Associate Changesets and Work Items" sap:VirtualizedContainerService.HintSize="1888,3895">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch DisplayName="Try Compile and Test" sap:VirtualizedContainerService.HintSize="1270,3849" mtbwt:BuildTrackingParticipant.Importance="Low">
                <TryCatch.Try>
                  <Sequence DisplayName="Compile and Test" sap:VirtualizedContainerService.HintSize="1252,3662">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ForEach x:TypeArguments="mtbwa:PlatformConfiguration" DisplayName="For Each Configuration in BuildSettings.PlatformConfigurations" sap:VirtualizedContainerService.HintSize="1230,2794" mtbwt:BuildTrackingParticipant.Importance="Low" Values="[BuildSettings.PlatformConfigurations]">
                      <ActivityAction x:TypeArguments="mtbwa:PlatformConfiguration">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="mtbwa:PlatformConfiguration" Name="platformConfiguration" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Compile and Test for Configuration" sap:VirtualizedContainerService.HintSize="1200,2686" mtbwt:BuildTrackingParticipant.Importance="Low">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="outputDirectory" />
                            <Variable x:TypeArguments="x:String" Name="logFileDropLocation" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Sequence DisplayName="Initialize Variables" sap:VirtualizedContainerService.HintSize="1178,394" mtbwt:BuildTrackingParticipant.Importance="Low">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign x:TypeArguments="x:String" DisplayName="Initialize OutputDirectory" sap:VirtualizedContainerService.HintSize="464,22" mtbwt:BuildTrackingParticipant.Importance="Low" To="[outputDirectory]" Value="[If (platformConfiguration.IsEmpty Or BuildSettings.PlatformConfigurations.Count = 1, BinariesDirectory, If (platformConfiguration.IsPlatformEmptyOrAnyCpu, BinariesDirectory + &quot;\&quot; + platformConfiguration.Configuration, BinariesDirectory + &quot;\&quot; + platformConfiguration.Platform + &quot;\&quot; + platformConfiguration.Configuration))]" />
                            <If Condition="[Not String.IsNullOrEmpty(BuildDetail.DropLocation)]" DisplayName="If DropLocation is Set" sap:VirtualizedContainerService.HintSize="464,208" mtbwt:BuildTrackingParticipant.Importance="Low">
                              <If.Then>
                                <Assign x:TypeArguments="x:String" DisplayName="Initialize LogFile Drop Location" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" To="[logFileDropLocation]" Value="[If (platformConfiguration.IsEmpty Or BuildSettings.PlatformConfigurations.Count = 1, BuildDetail.DropLocation + &quot;\logs&quot;, If (platformConfiguration.IsPlatformEmptyOrAnyCpu, BuildDetail.DropLocation + &quot;\logs\&quot; + platformConfiguration.Configuration, BuildDetail.DropLocation + &quot;\logs\&quot; + platformConfiguration.Platform + &quot;\&quot; + platformConfiguration.Configuration))]" />
                              </If.Then>
                            </If>
                          </Sequence>
                          <If Condition="[BuildSettings.HasProjectsToBuild]" DisplayName="If BuildSettings.HasProjectsToBuild" sap:VirtualizedContainerService.HintSize="1178,673" mtbwt:BuildTrackingParticipant.Importance="Low">
                            <If.Then>
                              <ForEach x:TypeArguments="x:String" DisplayName="For Each Project in BuildSettings.ProjectsToBuild" sap:VirtualizedContainerService.HintSize="448,565" mtbwt:BuildTrackingParticipant.Importance="Low" Values="[BuildSettings.ProjectsToBuild]">
                                <ActivityAction x:TypeArguments="x:String">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="x:String" Name="serverBuildProjectItem" />
                                  </ActivityAction.Argument>
                                  <TryCatch DisplayName="Try to Compile the Project" sap:VirtualizedContainerService.HintSize="418,457" mtbwt:BuildTrackingParticipant.Importance="Low">
                                    <TryCatch.Try>
                                      <Sequence DisplayName="Compile the Project" sap:VirtualizedContainerService.HintSize="222,270" mtbwt:BuildTrackingParticipant.Importance="Low">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="x:String" Name="localProject" />
                                          <Variable x:TypeArguments="x:String" Name="NuGetterVSolutionOutputDirectory" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <mtbwa:ConvertWorkspaceItem DisplayName="Convert Server Path to Local Path" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" Input="[serverBuildProjectItem]" Result="[localProject]" Workspace="[Workspace]" />
                                        <Assign x:TypeArguments="x:String" DisplayName="NuGetter - Assign solutionOutputDirectory - One output folder per solution" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" To="[NuGetterVSolutionOutputDirectory]" Value="[Path.Combine(outputDirectory, Path.GetFileNameWithoutExtension(serverBuildProjectItem))]" />
                                        <mtbwa:MSBuild CommandLineArguments="[String.Format(&quot;/p:SkipInvalidConfigurations=true {0}&quot;, MSBuildArguments)]" Configuration="[platformConfiguration.Configuration]" DisplayName="Run MSBuild for Project" GenerateVSPropsFile="[True]" sap:VirtualizedContainerService.HintSize="200,22" LogFileDropLocation="[logFileDropLocation]" OutDir="[NuGetterVSolutionOutputDirectory]" Platform="[platformConfiguration.Platform]" Project="[localProject]" RunCodeAnalysis="[RunCodeAnalysis]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" TargetsNotLogged="[New String() {&quot;GetNativeManifest&quot;, &quot;GetCopyToOutputDirectoryItems&quot;, &quot;GetTargetPath&quot;}]" ToolPlatform="[MSBuildPlatform]" Verbosity="[Verbosity]" />
                                      </Sequence>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="ex" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Handle Exception" sap:VirtualizedContainerService.HintSize="486,502">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <mtbwa:SetBuildProperties CompilationStatus="[Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Failed]" DisplayName="Set CompilationStatus to Failed" sap:VirtualizedContainerService.HintSize="464,22" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="CompilationStatus" />
                                            <If Condition="[CreateWorkItem]" DisplayName="If CreateWorkItem" sap:VirtualizedContainerService.HintSize="464,254" mtbwt:BuildTrackingParticipant.Importance="Low">
                                              <If.Then>
                                                <mtbwa:InvokeForReason DisplayName="Create Work Item for non-Shelveset Builds" sap:VirtualizedContainerService.HintSize="222,146" Reason="Manual, IndividualCI, BatchedCI, Schedule, ScheduleForced, UserCreated">
                                                  <mtbwa:OpenWorkItem AssignedTo="[BuildDetail.RequestedFor]" Comment="[&quot;This work item was created by TFS Build on a build failure.&quot;]" CustomFields="[New Dictionary(Of String, String) From { {&quot;System.Reason&quot;, &quot;Build Failure&quot;}, {&quot;Microsoft.VSTS.TCM.ReproSteps&quot;, &quot;Start the build using TFS Build&quot;}, {&quot;Priority&quot;, &quot;1&quot;}, {&quot;Severity&quot;, &quot;1 - Critical&quot;} }]" DisplayName="Create Work Item" sap:VirtualizedContainerService.HintSize="200,22" Title="[String.Format(&quot;Build Failure in Build: {0}&quot;, BuildDetail.BuildNumber)]" Type="[&quot;Bug&quot;]" />
                                                </mtbwa:InvokeForReason>
                                              </If.Then>
                                            </If>
                                            <Rethrow DisplayName="Rethrow the exception so the build will stop" sap:VirtualizedContainerService.HintSize="464,22" mtbwt:BuildTrackingParticipant.Importance="Low" />
                                          </Sequence>
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                  </TryCatch>
                                </ActivityAction>
                              </ForEach>
                            </If.Then>
                          </If>
                          <If Condition="[Not DisableTests]" DisplayName="If Not DisableTests" sap:VirtualizedContainerService.HintSize="1178,1415" mtbwt:BuildTrackingParticipant.Importance="Low">
                            <If.Then>
                              <Sequence DisplayName="Run Tests" sap:VirtualizedContainerService.HintSize="1053,1307" mtbwt:BuildTrackingParticipant.Importance="Low">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If Condition="[Not TestSpecs Is Nothing]" DisplayName="If Not TestSpecs Is Nothing" sap:VirtualizedContainerService.HintSize="1031,1183" mtbwt:BuildTrackingParticipant.Importance="Low">
                                  <If.Then>
                                    <ForEach x:TypeArguments="mtbwa:TestSpec" DisplayName="For Each TestSpec in TestSpecs" sap:VirtualizedContainerService.HintSize="906,1075" mtbwt:BuildTrackingParticipant.Importance="Low" Values="[TestSpecs]">
                                      <ActivityAction x:TypeArguments="mtbwa:TestSpec">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="mtbwa:TestSpec" Name="spec" />
                                        </ActivityAction.Argument>
                                        <TryCatch DisplayName="Try Run Tests" sap:VirtualizedContainerService.HintSize="876,967" mtbwt:BuildTrackingParticipant.Importance="Low">
                                          <TryCatch.Try>
                                            <If Condition="[TypeOf spec Is Microsoft.TeamFoundation.Build.Workflow.Activities.TestMetadataFileSpec]" DisplayName="If spec Is TestMetadataFileSpec" sap:VirtualizedContainerService.HintSize="858,780" mtbwt:BuildTrackingParticipant.Importance="None">
                                              <If.Then>
                                                <Sequence DisplayName="Run MSTest for Metadata File" sap:VirtualizedContainerService.HintSize="222,270">
                                                  <Sequence.Variables>
                                                    <Variable x:TypeArguments="mtbwa:TestMetadataFileSpec" Name="testMetadataFile" />
                                                    <Variable x:TypeArguments="x:String" Name="localTestMetadata" />
                                                  </Sequence.Variables>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign x:TypeArguments="mtbwa:TestMetadataFileSpec" DisplayName="Assign spec to testMetadataFile" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" To="[testMetadataFile]" Value="[DirectCast(spec, Microsoft.TeamFoundation.Build.Workflow.Activities.TestMetadataFileSpec)]" />
                                                  <mtbwa:ConvertWorkspaceItem DisplayName="Convert Server Path to Local Path" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" Input="[testMetadataFile.MetadataFileName]" Result="[localTestMetadata]" Workspace="[Workspace]" />
                                                  <mtbwa:MSTest Category="[testMetadataFile.CategoryFilter]" CommandLineArguments="[testMetadataFile.MSTestCommandLineArgs]" DisplayName="Run MSTest for Metadata File" Flavor="[platformConfiguration.Configuration]" sap:VirtualizedContainerService.HintSize="200,22" MaxPriority="[testMetadataFile.MaximumPriority]" MinPriority="[testMetadataFile.MinimumPriority]" PathToResultsFilesRoot="[TestResultsDirectory]" Platform="[platformConfiguration.Platform]" SearchPathRoot="[outputDirectory]" TestLists="[testMetadataFile.TestLists]" TestMetadata="[localTestMetadata]" TestSettings="[String.Empty]" />
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence DisplayName="Run MSTest for Test Assemblies" sap:VirtualizedContainerService.HintSize="611,672" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                  <Sequence.Variables>
                                                    <Variable x:TypeArguments="mtbwa:TestAssemblySpec" Name="testAssembly" />
                                                    <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="testAssemblies" />
                                                    <Variable x:TypeArguments="x:String" Default="[String.Empty]" Name="testFlavor" />
                                                    <Variable x:TypeArguments="x:String" Default="[String.Empty]" Name="testPlatform" />
                                                  </Sequence.Variables>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign x:TypeArguments="mtbwa:TestAssemblySpec" DisplayName="Assign spec to testAssembly" sap:VirtualizedContainerService.HintSize="589,22" mtbwt:BuildTrackingParticipant.Importance="Low" To="[testAssembly]" Value="[DirectCast(spec, Microsoft.TeamFoundation.Build.Workflow.Activities.TestAssemblySpec)]" />
                                                  <mtbwa:FindMatchingFiles DisplayName="Find Test Assemblies" sap:VirtualizedContainerService.HintSize="589,22" mtbwt:BuildTrackingParticipant.Importance="Low" MatchPattern="[String.Format(&quot;{0}\{1}&quot;, outputDirectory, testAssembly.AssemblyFileSpec)]" Result="[testAssemblies]" />
                                                  <If Condition="[testAssemblies.Count() &gt; 0]" DisplayName="If Test Assemblies Found" sap:VirtualizedContainerService.HintSize="589,424" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                    <If.Then>
                                                      <If Condition="[testAssembly.HasTestSettingsFile]" DisplayName="If testAssembly.HasTestSettingsFile" sap:VirtualizedContainerService.HintSize="464,316" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                        <If.Then>
                                                          <Sequence DisplayName="Find Test Settings File And Run MSTest" sap:VirtualizedContainerService.HintSize="222,208" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                            <Sequence.Variables>
                                                              <Variable x:TypeArguments="x:String" Name="localTestSettings" />
                                                            </Sequence.Variables>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <mtbwa:ConvertWorkspaceItem DisplayName="Convert Server Path to Local Path" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" Input="[testAssembly.TestSettingsFileName]" Result="[localTestSettings]" Workspace="[Workspace]" />
                                                            <mtbwa:MSTest Category="[testAssembly.CategoryFilter]" CommandLineArguments="[testAssembly.MSTestCommandLineArgs]" DisplayName="Run MSTest for Test Assemblies" Flavor="[platformConfiguration.Configuration]" sap:VirtualizedContainerService.HintSize="200,22" MaxPriority="[testAssembly.MaximumPriority]" MinPriority="[testAssembly.MinimumPriority]" PathToResultsFilesRoot="[TestResultsDirectory]" Platform="[platformConfiguration.Platform]" SearchPathRoot="[outputDirectory]" TestContainers="[testAssemblies]" TestSettings="[localTestSettings]" />
                                                          </Sequence>
                                                        </If.Then>
                                                        <If.Else>
                                                          <mtbwa:MSTest Category="[testAssembly.CategoryFilter]" CommandLineArguments="[testAssembly.MSTestCommandLineArgs]" DisplayName="Run MSTest for Test Assemblies" Flavor="[platformConfiguration.Configuration]" sap:VirtualizedContainerService.HintSize="200,22" MaxPriority="[testAssembly.MaximumPriority]" MinPriority="[testAssembly.MinimumPriority]" PathToResultsFilesRoot="[TestResultsDirectory]" Platform="[platformConfiguration.Platform]" SearchPathRoot="[outputDirectory]" TestContainers="[testAssemblies]" />
                                                        </If.Else>
                                                      </If>
                                                    </If.Then>
                                                  </If>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                          </TryCatch.Try>
                                          <TryCatch.Catches>
                                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="862,21">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ActivityAction x:TypeArguments="s:Exception">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="testException" />
                                                </ActivityAction.Argument>
                                                <Sequence DisplayName="Handle MSTest Exception" sap:VirtualizedContainerService.HintSize="486,452">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <If Condition="[Not (TypeOf testException Is Microsoft.TeamFoundation.Build.Workflow.Activities.TestFailureException)]" DisplayName="If testException is NOT TestFailureException" sap:VirtualizedContainerService.HintSize="464,208" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                    <If.Then>
                                                      <mtbwa:WriteBuildError DisplayName="Write Test Failure Exception message" sap:VirtualizedContainerService.HintSize="200,22" Message="[testException.Message]" />
                                                    </If.Then>
                                                  </If>
                                                  <mtbwa:SetBuildProperties DisplayName="Set TestStatus to Failed" sap:VirtualizedContainerService.HintSize="464,22" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="TestStatus" TestStatus="[Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Failed]" />
                                                  <If Condition="[spec.FailBuildOnFailure]" DisplayName="If spec.FailBuildOnFailure" sap:VirtualizedContainerService.HintSize="464,208" mtbwt:BuildTrackingParticipant.Importance="Low">
                                                    <If.Then>
                                                      <Assign x:TypeArguments="x:Boolean" DisplayName="Set treatTestFailureAsBuildFailure to True" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" To="[treatTestFailureAsBuildFailure]" Value="[True]" />
                                                    </If.Then>
                                                  </If>
                                                </Sequence>
                                              </ActivityAction>
                                            </Catch>
                                          </TryCatch.Catches>
                                        </TryCatch>
                                      </ActivityAction>
                                    </ForEach>
                                  </If.Then>
                                </If>
                              </Sequence>
                            </If.Then>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </ForEach>
                    <If Condition="[BuildDetail.CompilationStatus = Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Unknown]" DisplayName="If CompilationStatus = Unknown" sap:VirtualizedContainerService.HintSize="1230,208" mtbwt:BuildTrackingParticipant.Importance="Low">
                      <If.Then>
                        <mtbwa:SetBuildProperties CompilationStatus="[Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Succeeded]" DisplayName="Set CompilationStatus to Succeeded" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="CompilationStatus" />
                      </If.Then>
                    </If>
                    <If Condition="[BuildDetail.TestStatus = Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Unknown]" DisplayName="If TestStatus = Unknown" sap:VirtualizedContainerService.HintSize="1230,208" mtbwt:BuildTrackingParticipant.Importance="Low">
                      <If.Then>
                        <mtbwa:SetBuildProperties DisplayName="Set TestStatus to Succeeded" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="TestStatus" TestStatus="[Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Succeeded]" />
                      </If.Then>
                    </If>
                    <If Condition="[treatTestFailureAsBuildFailure And (BuildDetail.TestStatus = Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Failed)]" DisplayName="If TreatTestFailureAsBuildFailure And (TestStatus = Failed)" sap:VirtualizedContainerService.HintSize="1230,208" mtbwt:BuildTrackingParticipant.Importance="Low">
                      <If.Then>
                        <mtbwa:SetBuildProperties DisplayName="Set Status to Failed" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" PropertiesToSet="Status" Status="[Microsoft.TeamFoundation.Build.Client.BuildStatus.Failed]" />
                      </If.Then>
                    </If>
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1256,21">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="compilationExceptionArgument" />
                      </ActivityAction.Argument>
                      <Assign x:TypeArguments="s:Exception" DisplayName="Save the Compilation Exception" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="None" To="[compilationException]" Value="[compilationExceptionArgument]" />
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
              <If Condition="[AssociateChangesetsAndWorkItems]" DisplayName="If AssociateChangesetsAndWorkItems" sap:VirtualizedContainerService.HintSize="464,3849" mtbwt:BuildTrackingParticipant.Importance="Low">
                <If.Then>
                  <mtbwa:InvokeForReason DisplayName="Associate Changesets and Work Items for non-Shelveset Builds" sap:VirtualizedContainerService.HintSize="222,146" Reason="Manual, IndividualCI, BatchedCI, Schedule, ScheduleForced, UserCreated">
                    <mtbwa:AssociateChangesetsAndWorkItems DisplayName="Associate Changesets and Work Items" sap:VirtualizedContainerService.HintSize="200,22" Result="[associatedChangesets]" />
                  </mtbwa:InvokeForReason>
                </If.Then>
              </If>
            </Parallel>
            <If Condition="[Not compilationException Is Nothing]" DisplayName="If a Compilation Exception Occurred" sap:VirtualizedContainerService.HintSize="1888,51" mtbwt:BuildTrackingParticipant.Importance="Low">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Throw DisplayName="Rethrow Compilation Exception" Exception="[compilationException]" sap:VirtualizedContainerService.HintSize="269,100" mtbwt:BuildTrackingParticipant.Importance="Low" />
              </If.Then>
            </If>
            <Parallel DisplayName="Get Impacted Tests, Index Sources and Publish Symbols" sap:VirtualizedContainerService.HintSize="1888,51">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[PerformTestImpactAnalysis]" DisplayName="If PerformTestImpactAnalysis" sap:VirtualizedContainerService.HintSize="464,931" mtbwt:BuildTrackingParticipant.Importance="Low">
                <If.Then>
                  <Sequence DisplayName="Get Impacted Tests" sap:VirtualizedContainerService.HintSize="281,208" mtbwt:BuildTrackingParticipant.Importance="Low">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="assemblies" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <mtbwa:FindMatchingFiles DisplayName="Find Build Outputs" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" MatchPattern="[String.Format(&quot;{0}\**\*.dll;{0}\**\*.exe&quot;, BinariesDirectory)]" Result="[assemblies]" />
                    <mttbb:GetImpactedTests BaselineBuildDropLocation="{x:Null}" CodeChanges="{x:Null}" ImpactedTests="{x:Null}" Assemblies="[assemblies]" AssociatedChangesets="[associatedChangesets]" BinariesRoot="[BinariesDirectory]" Build="[BuildDetail]" DisplayName="Get Impacted Tests" sap:VirtualizedContainerService.HintSize="200,22" Workspace="[Workspace]" />
                  </Sequence>
                </If.Then>
              </If>
              <If Condition="[SourceAndSymbolServerSettings.IndexSources Or SourceAndSymbolServerSettings.HasSymbolStorePath]" DisplayName="If SourceAndSymbolServerSettings.IndexSources Or SourceAndSymbolServerSettings.HasSymbolStorePath" sap:VirtualizedContainerService.HintSize="690,931" mtbwt:BuildTrackingParticipant.Importance="Low">
                <If.Then>
                  <mtbwa:InvokeForReason DisplayName="Index Sources and Publish Symbols for Triggered Builds" sap:VirtualizedContainerService.HintSize="565,825" Reason="Triggered">
                    <mtbwa:InvokeForReason.Variables>
                      <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="symbolFiles" />
                    </mtbwa:InvokeForReason.Variables>
                    <mtbwa:FindMatchingFiles DisplayName="Find Symbol Files" sap:VirtualizedContainerService.HintSize="543,22" mtbwt:BuildTrackingParticipant.Importance="Low" MatchPattern="[String.Format(&quot;{0}\**\*.pdb&quot;, BinariesDirectory)]" Result="[symbolFiles]" />
                    <If Condition="[SourceAndSymbolServerSettings.IndexSources]" DisplayName="If SourceAndSymbolServerSettings.IndexSources" sap:VirtualizedContainerService.HintSize="543,393" mtbwt:BuildTrackingParticipant.Importance="Low">
                      <If.Then>
                        <TryCatch DisplayName="Try Index Sources" sap:VirtualizedContainerService.HintSize="418,287" mtbwt:BuildTrackingParticipant.Importance="Low">
                          <TryCatch.Try>
                            <mtbwa:IndexSources DisplayName="Index Sources" FileList="[symbolFiles]" sap:VirtualizedContainerService.HintSize="400,100" />
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                </ActivityAction.Argument>
                                <mtbwa:WriteBuildError sap:VirtualizedContainerService.HintSize="398,75" Message="[exception.Message]" />
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                      </If.Then>
                    </If>
                    <If Condition="[SourceAndSymbolServerSettings.HasSymbolStorePath]" DisplayName="If SourceAndSymbolServerSettings.HasSymbolStorePath" sap:VirtualizedContainerService.HintSize="543,206" mtbwt:BuildTrackingParticipant.Importance="Low">
                      <If.Then>
                        <TryCatch DisplayName="Try Publish Symbols" mtbwt:BuildTrackingParticipant.Importance="Low">
                          <TryCatch.Try>
                            <mtbwa:SharedResourceScope DisplayName="Synchronize Access to Symbol Store" mtbwt:BuildTrackingParticipant.Importance="Low" MaxExecutionTime="[TimeSpan.Zero]" MaxWaitTime="[New TimeSpan(1, 0, 0)]" ResourceName="[SourceAndSymbolServerSettings.SymbolStorePath]">
                              <mtbwa:PublishSymbols DisplayName="Publish Symbols" FileList="[symbolFiles]" ProductName="[BuildDetail.BuildDefinition.Name]" StorePath="[SourceAndSymbolServerSettings.SymbolStorePath]" Version="[BuildDetail.BuildNumber]" />
                            </mtbwa:SharedResourceScope>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception">
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                </ActivityAction.Argument>
                                <mtbwa:WriteBuildError Message="[exception.Message]" />
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                      </If.Then>
                    </If>
                  </mtbwa:InvokeForReason>
                </If.Then>
              </If>
            </Parallel>
          </Sequence>
        </TryCatch.Try>
      </TryCatch>
      <If Condition="[String.IsNullOrWhiteSpace(NuGetterPackageListFilePath)]" DisplayName="If Build Def includes the multi-package list file do multi-package otherwise do single" sap:VirtualizedContainerService.HintSize="1033,1862">
        <If.Then>
          <Sequence DisplayName="Get Package Version" sap:VirtualizedContainerService.HintSize="200,51">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="NuGetterVPackageVersionPattern" />
              <Variable x:TypeArguments="x:String" Name="NuGetterVSeedFilePath" />
              <Variable x:TypeArguments="x:String" Name="NuGetterVPackageVersionPatternOrFile" />
              <Variable x:TypeArguments="x:String" Name="NuGetterVPackageVersion" />
              <Variable x:TypeArguments="x:String" Name="NuGetterVNuSpecFilePath" />
              <Variable x:TypeArguments="x:String" Name="NuGetterVPackageId" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[String.IsNullOrWhiteSpace(NuGetterNuSpecFilePath)]" DisplayName="If NuSpec File Path not provided then no packaging" sap:VirtualizedContainerService.HintSize="980,1338">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Inform build log of the packaging failure" sap:VirtualizedContainerService.HintSize="222,208">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="The NuSpec file was not provided - aborting the packaging." mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                  <mtbwa:SetBuildProperties DisplayName="Package Failed. Set Build Status to Partially Succeeded." sap:VirtualizedContainerService.HintSize="200,22" PropertiesToSet="Status" Status="[BuildStatus.PartiallySucceeded]" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="733,1230">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[NuGetterNuSpecFilePath.StartsWith(&quot;$/&quot;)]" DisplayName="Get the file path to the NuSpec file" sap:VirtualizedContainerService.HintSize="711,208">
                    <If.Then>
                      <local:GetFile BuildDirectory="[BuildDirectory]" DestinationSubfolderName="NuGetPackageSupport" DisplayName="Get NuGetterVNuSpecFilePath" FileToGet="[NuGetterNuSpecFilePath]" FullPathToFile="[NuGetterVNuSpecFilePath]" sap:VirtualizedContainerService.HintSize="200,22" Workspace="[Workspace]" />
                    </If.Then>
                    <If.Else>
                      <Assign x:TypeArguments="x:String" DisplayName="Set NuGetterVNuSpecFilePath" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" To="[NuGetterVNuSpecFilePath]" Value="[Path.Combine(SourcesDirectory, NuGetterNuSpecFilePath)]" />
                    </If.Else>
                  </If>
                  <local:XmlGetElement DisplayName="Get NuGetterVPackageId" ElementValue="[NuGetterVPackageId]" FilePath="[NuGetterVNuSpecFilePath]" sap:VirtualizedContainerService.HintSize="711,22" XPathExpression="ns:package/ns:metadata/ns:id" XmlNamespace="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd" XmlNamespacePrefix="ns" />
                  <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="711,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;NuGetterVPackageId is {0}&quot;, NuGetterVPackageId)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                  <If Condition="[String.IsNullOrWhiteSpace(NuGetterVersion)]" DisplayName="Where is the Package Version Coming From" sap:VirtualizedContainerService.HintSize="711,672">
                    <If.Then>
                      <Assign x:TypeArguments="x:String" DisplayName="Set NuGetterVPackageVersion" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" To="[NuGetterVPackageVersion]" Value="[String.Empty]" />
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Use the value in the version argument" sap:VirtualizedContainerService.HintSize="486,564">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[NuGetterVersion.StartsWith(&quot;$/&quot;)]" DisplayName="Is the version argument pointing at a seed file in source control" sap:VirtualizedContainerService.HintSize="464,316">
                          <If.Then>
                            <local:GetFile BuildDirectory="[BuildDirectory]" DestinationSubfolderName="TfsNuGetPackageVersion" DisplayName="Get File NuGetterVPackageVersionPattern" FileToGet="[NuGetterVersion]" FullPathToFile="[NuGetterVPackageVersionPatternOrFile]" sap:VirtualizedContainerService.HintSize="200,22" Workspace="[Workspace]" />
                          </If.Then>
                          <If.Else>
                            <Sequence sap:VirtualizedContainerService.HintSize="222,208">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;Setting NuGetterVPackageVersionPatternOrFile to {0}&quot;, NuGetterVersion)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                              <Assign x:TypeArguments="x:String" DisplayName="Set NuGetterVPackageVersionPattern" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" To="[NuGetterVPackageVersionPatternOrFile]" Value="[NuGetterVersion]" />
                            </Sequence>
                          </If.Else>
                        </If>
                        <local:GetVersionPattern DisplayName="Get Version Pattern" sap:VirtualizedContainerService.HintSize="464,22" PackageId="[NuGetterVPackageId]" SourcesDirectory="[SourcesDirectory]" VersionPattern="[NuGetterVPackageVersionPattern]" VersionPatternOrSeedFilePath="[NuGetterVPackageVersionPatternOrFile]" />
                        <local:ConvertVersionPattern BuildNumber="[BuildDetail.BuildNumber]" BuildNumberPrefix="0" ConvertedVersionNumber="[NuGetterVPackageVersion]" DisplayName="Convert Version Pattern" sap:VirtualizedContainerService.HintSize="464,22" VersionPattern="[NuGetterVPackageVersionPattern]" />
                      </Sequence>
                    </If.Else>
                  </If>
                  <local:PerformNuGetPack AdditionalOptions="[NuGetterAdditionalOptions]" ApiKey="[NuGetterApiKey]" BasePath="[NuGetterBasePath]" BinariesDirectory="[BinariesDirectory]" BuildDetail="[BuildDetail]" BuildDirectory="[BuildDirectory]" CreateOnly="[NuGetterSwitchCreateOnly]" sap:VirtualizedContainerService.HintSize="711,22" NuGetExeFilePath="[NuGetterNuGetExeFilePath]" NuSpecFilePath="[NuGetterNuSpecFilePath]" OutputDirectory="[NuGetterOutputDirectory]" PowerShellScriptPath="[NuGetterPowerShellScriptPath]" PushDestination="[NuGetterPushDestination]" SourcesDirectory="[SourcesDirectory]" SwitchInvokePowerShell="[NuGetterSwitchInvokePowerShell]" SwitchInvokePush="[NuGetterSwitchInvokePush]" Version="[NuGetterVPackageVersion]" Workspace="[Workspace]" />
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence DisplayName="Process Multiple NuGetter Projects" sap:VirtualizedContainerService.HintSize="808,1754">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[String.IsNullOrWhiteSpace(NuGetterPackageListFilePath)]" DisplayName="Get the NuGetterPackageListFilePath - if blank or null then fail" sap:VirtualizedContainerService.HintSize="786,51">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="222,270">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="The Package List file was not provided - aborting the packaging." mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                  <mtbwa:SetBuildProperties DisplayName="Package Failed. Set Build Status to Partially Succeeded." sap:VirtualizedContainerService.HintSize="200,22" PropertiesToSet="Status" Status="[BuildStatus.Failed]" />
                  <Throw Exception="[New ArgumentException(&quot;NuGetter Package List File was not provided.  Aborting.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" />
                </Sequence>
              </If.Then>
              <If.Else>
                <If Condition="[NuGetterPackageListFilePath.StartsWith(&quot;$/&quot;)]" sap:VirtualizedContainerService.HintSize="734,316">
                  <If.Then>
                    <local:GetFile BuildDirectory="[BuildDirectory]" DestinationSubfolderName="NuGetPackageSupport" DisplayName="Get NuGetterVNuSpecFilePath" FileToGet="[NuGetterPackageListFilePath]" FullPathToFile="[NuGetterVPackageListFilePath]" sap:VirtualizedContainerService.HintSize="200,22" Workspace="[Workspace]" />
                  </If.Then>
                  <If.Else>
                    <If Condition="[Path.IsPathRooted(NuGetterPackageListFilePath)]" sap:VirtualizedContainerService.HintSize="509,208">
                      <If.Then>
                        <Assign DisplayName="NuGetterPackageListFilePath" sap:VirtualizedContainerService.HintSize="242,60">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[NuGetterVPackageListFilePath]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[NuGetterPackageListFilePath]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Then>
                      <If.Else>
                        <Assign DisplayName="Combine(SourcesDirectory, NuGetterPackageListFilePath)" sap:VirtualizedContainerService.HintSize="242,60">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[NuGetterVPackageListFilePath]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Path.Combine(SourcesDirectory, NuGetterPackageListFilePath)]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Else>
                    </If>
                  </If.Else>
                </If>
              </If.Else>
            </If>
            <local:XmlGetPackageElementsCount DisplayName="Get the count of the packages in the XML file" sap:VirtualizedContainerService.HintSize="786,22" PackageInfoElementsCount="[NuGetterVPackagesCount]" PackageInfoFilePath="[NuGetterVPackageListFilePath]" />
            <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="786,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;The number of packages to create is: {0}.&quot;, NuGetterVPackagesCount)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
            <While DisplayName="Loop through all of the packages" sap:VirtualizedContainerService.HintSize="786,1415" Condition="[NuGetterVPackagesCount &gt; 0]">
              <Sequence DisplayName="Process the Package" sap:VirtualizedContainerService.HintSize="760,1297">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Boolean" Name="NuGetterVPkgSwitchInvokePowerShell" />
                  <Variable x:TypeArguments="x:Boolean" Name="NuGetterVPkgSwitchInvokePush" />
                  <Variable x:TypeArguments="x:String" Name="NuGetterVPkgVersion" />
                  <Variable x:TypeArguments="x:String" Name="NuGetterVPkgPushDestination" />
                  <Variable x:TypeArguments="x:String" Name="NuGetterVPkgNuSpecFilePath" />
                  <Variable x:TypeArguments="x:String" Name="NuGetterVPkgAdditionalOptions" />
                  <Variable x:TypeArguments="x:String" Name="NuGetterVPkgBasePath" />
                  <Variable x:TypeArguments="x:String" Name="NuGetterVPkgName" />
                  <Variable x:TypeArguments="x:String" Name="NuGetterVPkgOutputDirectory" />
                  <Variable x:TypeArguments="x:Boolean" Name="NuGetterVPkgSwitchCreateOnly" />
                  <Variable x:TypeArguments="x:String" Name="NuGetterVPkgPowerShellScriptPath" />
                  <Variable x:TypeArguments="x:String" Name="NuGetterVNuSpecFilePath" />
                  <Variable x:TypeArguments="x:String" Name="NuGetterVPackageVersion" />
                  <Variable x:TypeArguments="x:String" Name="NuGetterVPackageVersionPatternOrFile" />
                  <Variable x:TypeArguments="x:String" Name="NuGetterVPackageId" />
                  <Variable x:TypeArguments="x:String" Name="NuGetterVPackageVersionPattern" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <local:XmlGetPackageNuSpecFile sap:VirtualizedContainerService.HintSize="738,22" NuSpecFilePath="[NuGetterVPkgNuSpecFilePath]" PackageIndex="[NuGetterVPackagesCount - 1]" PackageInfoFilePath="[NuGetterVPackageListFilePath]" />
                <If Condition="[String.IsNullOrWhiteSpace(NuGetterVPkgNuSpecFilePath)]" DisplayName="If NuSpec File Path not provided then no packaging" sap:VirtualizedContainerService.HintSize="738,51">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence DisplayName="Inform build log of the packaging failure" sap:VirtualizedContainerService.HintSize="222,208">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="The NuSpec file was not provided - aborting the packaging." mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                      <mtbwa:SetBuildProperties DisplayName="Package Failed. Set Build Status to Partially Succeeded." sap:VirtualizedContainerService.HintSize="200,22" PropertiesToSet="Status" Status="[BuildStatus.PartiallySucceeded]" />
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="486,456">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[NuGetterVPkgNuSpecFilePath.StartsWith(&quot;$/&quot;)]" DisplayName="Get the file path to the NuSpec file" sap:VirtualizedContainerService.HintSize="464,208">
                        <If.Then>
                          <local:GetFile BuildDirectory="[BuildDirectory]" DestinationSubfolderName="NuGetPackageSupport" DisplayName="Get NuGetterVNuSpecFilePath" FileToGet="[NuGetterVPkgNuSpecFilePath]" FullPathToFile="[NuGetterVNuSpecFilePath]" sap:VirtualizedContainerService.HintSize="200,22" Workspace="[Workspace]" />
                        </If.Then>
                        <If.Else>
                          <Assign x:TypeArguments="x:String" DisplayName="Set NuGetterVNuSpecFilePath" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" To="[NuGetterVNuSpecFilePath]" Value="[Path.Combine(SourcesDirectory, NuGetterVPkgNuSpecFilePath)]" />
                        </If.Else>
                      </If>
                      <local:XmlGetElement DisplayName="Get NuGetterVPackageId" ElementValue="[NuGetterVPackageId]" FilePath="[NuGetterVNuSpecFilePath]" sap:VirtualizedContainerService.HintSize="464,22" XPathExpression="ns:package/ns:metadata/ns:id" XmlNamespace="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd" XmlNamespacePrefix="ns" />
                      <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="464,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;NuGetterVPackageId is {0}&quot;, NuGetterVPackageId)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                    </Sequence>
                  </If.Else>
                </If>
                <local:XmlGetPackageElements AdditionalOptions="[NuGetterVPkgAdditionalOptions]" AdditionalOptionsFromBldDef="[NuGetterAdditionalOptions]" BasePath="[NuGetterVPkgBasePath]" BasePathFromBldDef="[NuGetterBasePath]" CreateOnly="[NuGetterVPkgSwitchCreateOnly]" CreateOnlyFromBldDef="[NuGetterSwitchCreateOnly]" sap:VirtualizedContainerService.HintSize="738,22" Name="[NuGetterVPkgName]" NuSpecFilePath="[NuGetterVPkgNuSpecFilePath]" OutputDirectory="[NuGetterVPkgOutputDirectory]" OutputDirectoryFromBldDef="[NuGetterOutputDirectory]" PackageIndex="[NuGetterVPackagesCount - 1]" PackageInfoFilePath="[NuGetterVPackageListFilePath]" PowerShellScriptPath="[NuGetterVPkgPowerShellScriptPath]" PowerShellScriptPathFromBldDef="[NuGetterPowerShellScriptPath]" PushDestination="[NuGetterVPkgPushDestination]" PushDestinationFromBldDef="[NuGetterPushDestination]" SwitchInvokePowerShell="[NuGetterVPkgSwitchInvokePowerShell]" SwitchInvokePowerShellFromBldDef="[NuGetterSwitchInvokePowerShell]" SwitchInvokePush="[NuGetterVPkgSwitchInvokePush]" SwitchInvokePushFromBldDef="[NuGetterSwitchInvokePush]" Version="[NuGetterVPkgVersion]" VersionFromBldDef="[NuGetterVersion]" />
                <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="738,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;NuGetterVPkgAdditionalOptions: {0} -- NuGetterAdditionalOptions: {1} -- NuGetterVPkgBasePath: {2} -- NuGetterBasePath: {3} -- NuGetterVPkgSwitchCreateOnly: {4} -- NuGetterSwitchCreateOnly: {5} -- NuGetterVPkgName: {6} -- NuGetterVPkgNuSpecFilePath: {7} -- NuGetterVPkgOutputDirectory: {8} -- NuGetterOutputDirectory: {9} -- NuGetterVPackagesCount - 1: {10} -- NuGetterVPackageListFilePath: {11} -- NuGetterVPkgPowerShellScriptPath: {12} -- NuGetterPowerShellScriptPath: {13} -- NuGetterVPkgPushDestination: {14} -- NuGetterPushDestination: {15} -- NuGetterVPkgSwitchInvokePowerShell: {16} -- NuGetterSwitchInvokePowerShell: {17} -- NuGetterVPkgSwitchInvokePush: {18} -- NuGetterSwitchInvokePush: {19} -- NuGetterVPkgVersion: {20} -- NuGetterVersion: {21}&quot;, NuGetterVPkgAdditionalOptions, NuGetterAdditionalOptions, NuGetterVPkgBasePath, NuGetterBasePath, NuGetterVPkgSwitchCreateOnly, NuGetterSwitchCreateOnly, NuGetterVPkgName, NuGetterVPkgNuSpecFilePath, NuGetterVPkgOutputDirectory, NuGetterOutputDirectory, NuGetterVPackagesCount - 1, NuGetterVPackageListFilePath, NuGetterVPkgPowerShellScriptPath, NuGetterPowerShellScriptPath, NuGetterVPkgPushDestination, NuGetterPushDestination, NuGetterVPkgSwitchInvokePowerShell, NuGetterSwitchInvokePowerShell, NuGetterVPkgSwitchInvokePush, NuGetterSwitchInvokePush, NuGetterVPkgVersion, NuGetterVersion)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                <If Condition="[String.IsNullOrWhiteSpace(NuGetterVPkgVersion)]" DisplayName="Where is the Package Version Coming From" sap:VirtualizedContainerService.HintSize="738,672">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence DisplayName="NuGetterVPkgVersion was empty" sap:VirtualizedContainerService.HintSize="222,208">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="NuGetterVPkgVersion was empty" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                      <Assign x:TypeArguments="x:String" DisplayName="Set NuGetterVPackageVersion" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" To="[NuGetterVPackageVersion]" Value="[String.Empty]" />
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="Use the value in the version argument" sap:VirtualizedContainerService.HintSize="491,564">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[NuGetterVPkgVersion.StartsWith(&quot;$/&quot;)]" DisplayName="Is the version argument pointing at a seed file in source control" sap:VirtualizedContainerService.HintSize="469,316">
                        <If.Then>
                          <Sequence DisplayName="NuGetterVPkgVersion started with $/" sap:VirtualizedContainerService.HintSize="222,208">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[&quot;NuGetterVPkgVersion started with $/: &quot; + NuGetterVPkgVersion]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                            <local:GetFile BuildDirectory="[BuildDirectory]" DestinationSubfolderName="TfsNuGetPackageVersion" DisplayName="Get File NuGetterVPackageVersionPattern" FileToGet="[NuGetterVPkgVersion]" FullPathToFile="[NuGetterVPackageVersionPatternOrFile]" sap:VirtualizedContainerService.HintSize="200,22" Workspace="[Workspace]" />
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="222,208">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="200,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;Setting NuGetterVPackageVersionPatternOrFile to NuGetterVPkgVersion: {0}&quot;, NuGetterVPkgVersion)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                            <Assign x:TypeArguments="x:String" DisplayName="Set NuGetterVPackageVersionPattern" sap:VirtualizedContainerService.HintSize="200,22" mtbwt:BuildTrackingParticipant.Importance="Low" To="[NuGetterVPackageVersionPatternOrFile]" Value="[NuGetterVPkgVersion]" />
                          </Sequence>
                        </If.Else>
                      </If>
                      <local:GetVersionPattern DisplayName="Get Version Pattern" sap:VirtualizedContainerService.HintSize="469,22" PackageId="[NuGetterVPackageId]" SourcesDirectory="[SourcesDirectory]" VersionPattern="[NuGetterVPackageVersionPattern]" VersionPatternOrSeedFilePath="[NuGetterVPackageVersionPatternOrFile]" />
                      <mtbwa:WriteBuildMessage sap:VirtualizedContainerService.HintSize="469,22" Importance="[Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High]" Message="[String.Format(&quot;NuGet Package Version Pattern: {0} -- PackageVersionPatternOrFile: {1}&quot;, NuGetterVPackageVersionPattern, NuGetterVPackageVersionPatternOrFile)]" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces" />
                    </Sequence>
                  </If.Else>
                </If>
                <local:ConvertVersionPattern BuildNumber="[BuildDetail.BuildNumber]" BuildNumberPrefix="0" ConvertedVersionNumber="[NuGetterVPackageVersion]" DisplayName="Convert Version Pattern" sap:VirtualizedContainerService.HintSize="738,22" VersionPattern="[NuGetterVPackageVersionPattern]" />
                <local:PerformNuGetPack AdditionalOptions="[NuGetterVPkgAdditionalOptions]" ApiKey="[NuGetterApiKey]" BasePath="[NuGetterVPkgBasePath]" BinariesDirectory="[BinariesDirectory]" BuildDetail="[BuildDetail]" BuildDirectory="[BuildDirectory]" CreateOnly="[NuGetterVPkgSwitchCreateOnly]" sap:VirtualizedContainerService.HintSize="738,22" NuGetExeFilePath="[NuGetterNuGetExeFilePath]" NuSpecFilePath="[NuGetterVNuSpecFilePath]" OutputDirectory="[NuGetterVPkgOutputDirectory]" PowerShellScriptPath="[NuGetterVPkgPowerShellScriptPath]" PushDestination="[NuGetterVPkgPushDestination]" SourcesDirectory="[SourcesDirectory]" SwitchInvokePowerShell="[NuGetterVPkgSwitchInvokePowerShell]" SwitchInvokePush="[NuGetterVPkgSwitchInvokePush]" Version="[NuGetterVPackageVersion]" Workspace="[Workspace]" />
                <Assign sap:VirtualizedContainerService.HintSize="738,60">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[NuGetterVPackagesCount]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[NuGetterVPackagesCount - 1]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </While>
          </Sequence>
        </If.Else>
      </If>
    </mtbwa:AgentScope>
    <mtbwa:InvokeForReason DisplayName="Check In Gated Changes for CheckInShelveset Builds" sap:VirtualizedContainerService.HintSize="1055,146" Reason="CheckInShelveset">
      <mtbwa:CheckInGatedChanges DisplayName="Check In Gated Changes" sap:VirtualizedContainerService.HintSize="200,22" />
    </mtbwa:InvokeForReason>
  </Sequence>
</Activity>